#!/usr/bin/python3
# SPDX-License-Identifier: zlib-acknowledgement

import sys

from dataclasses import dataclass
from enum import Enum
from typing import List

class INGREDIENT_CAT(Enum):
  INGREDIENT_CAT_DAIRY,
  INGREDIENT_CAT_FRUIT_VEG,
  INGREDIENT_CAT_FROZEN,
  INGREDIENT_CAT_TOILETRIES,
  INGREDIENT_CAT_MEDICINAL,
  INGREDIENT_CAT_CONDIMENT,
  INGREDIENT_CAT_MEAT,
  INGREDIENT_CAT_CANNED,
  INGREDIENT_CAT_ALCOHOL,
  INGREDIENT_CAT_OTHER

@dataclass
class Ingredient:
  name: str
  amount: float
  category: INGREDIENT_CAT

tuscan_chicken = [
  Ingredient("chicken-breast", 700, INGREDIENT_CAT_MEAT),
  Ingredient("egg", 1, INGREDIENT_CAT_DAIRY),
  Ingredient("oregano", 1, INGREDIENT_CAT_CONDIMENT),
  Ingredient("thyme", 0.5, INGREDIENT_CAT_CONDIMENT),
  Ingredient("paprika", 1.5, INGREDIENT_CAT_CONDIMENT),
  Ingredient("garlic-salt", 0.25, INGREDIENT_CAT_CONDIMENT),
  Ingredient("plain-flour", 3, INGREDIENT_CAT_OTHER),
  Ingredient("brown-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
  Ingredient("garlic", 2, INGREDIENT_CAT_FRUIT_VEG),
  Ingredient("sun-dried-tomatoes", 150, INGREDIENT_CAT_FRUIT_VEG),
  Ingredient("red-capsicum", 1, INGREDIENT_CAT_FRUIT_VEG),
  Ingredient("tomato-paste", 1, INGREDIENT_CAT_OTHER),
  Ingredient("white-wine", 90, INGREDIENT_CAT_ALCOHOL),
  Ingredient("chicken-stock", 1, INGREDIENT_CAT_OTHER),
  Ingredient("double-cream", 90, INGREDIENT_CAT_DAIRY),
  Ingredient("parmesan-cheese", 0.5, INGREDIENT_CAT_DAIRY),
  Ingredient("baby-spinach", 120, INGREDIENT_CAT_FRUIT_VEG),
  Ingredient("fresh-parsley", 1, INGREDIENT_CAT_FRUIT_VEG),
  Ingredient("fussili-pasta", 500, INGREDIENT_CAT_OTHER),
]

# TODO(Ryan): Max-flow to ensure constraints, e.g. 2 beef, 2 pasta etc.
global_recipes = [
  R("fettucine-bolognese", "beef", "pasta", 1,
    [I("beef-mince", 500, INGREDIENT_CAT_MEAT),
     I("fettucine-pasta", 500, INGREDIENT_CAT_OTHER),
     I("brown-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("celery", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("carrot", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("pancetta", 150, INGREDIENT_CAT_MEAT),
     I("red-wine", 200, INGREDIENT_CAT_ALCOHOL),
     I("tomato-paste", 2, INGREDIENT_CAT_OTHER),
     I("passata", 200, INGREDIENT_CAT_OTHER),
     I("chicken-stock", 1, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("beef-chow-fun", "beef", "noodles", 45,
    [I("light-soy-sauce", 2, INGREDIENT_CAT_OTHER),
     I("dark-soy-sauce", 2, INGREDIENT_CAT_OTHER),
     I("oyster-sauce", 2, INGREDIENT_CAT_OTHER),
     I("sesame-oil", 2, INGREDIENT_CAT_OTHER),
     I("brown-sugar", 1, INGREDIENT_CAT_OTHER),
     I("rice-vinegar", 1, INGREDIENT_CAT_OTHER),
     I("ginger", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("garlic", 3, INGREDIENT_CAT_FRUIT_VEG),
     I("white-pepper", 0.25, INGREDIENT_CAT_CONDIMENT),
     I("flank-steak", 500, INGREDIENT_CAT_MEAT),
     I("thin-rice-noodles", 200, INGREDIENT_CAT_OTHER),
     I("brown-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("yellow-capsicum", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("bean-sprouts", 200, INGREDIENT_CAT_FRUIT_VEG),
     I("spring-onions", 4, INGREDIENT_CAT_FRUIT_VEG),
     I("baby-spinach", 60, INGREDIENT_CAT_FRUIT_VEG),
     I("red-chilli", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("sesame-seeds", 1, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("beef-massaman", "beef", "rice", 3,
    [I("red-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("red-chilli", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("coriander", 2, INGREDIENT_CAT_CONDIMENT),
     I("cumin", 2, INGREDIENT_CAT_CONDIMENT),
     I("cinnamon", 0.5, INGREDIENT_CAT_CONDIMENT),
     I("white-pepper", 0.5, INGREDIENT_CAT_CONDIMENT),
     I("garlic", 3, INGREDIENT_CAT_FRUIT_VEG),
     I("lemongrass", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("ginger", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("fish-sauce", 3, INGREDIENT_CAT_OTHER),
     I("brown-sugar", 1, INGREDIENT_CAT_OTHER),
     I("fresh-coriander", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("corn-flour", 1.5, INGREDIENT_CAT_OTHER),
     I("beef-chuck", 1000, INGREDIENT_CAT_MEAT),
     I("beef-stock", 2, INGREDIENT_CAT_OTHER),
     I("coconut-milk", 400, INGREDIENT_CAT_OTHER),
     I("potato", 3, INGREDIENT_CAT_FRUIT_VEG),
     I("lime-juice", 1, INGREDIENT_CAT_OTHER),
     I("white-rice", 500, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("butter-chicken", "chicken", "rice", 2,
    [I("chicken-breast", 700, INGREDIENT_CAT_MEAT),
     I("natural-yogurt", 80, INGREDIENT_CAT_DAIRY),
     I("lemon-juice", 1, INGREDIENT_CAT_OTHER),
     I("garlic", 5, INGREDIENT_CAT_FRUIT_VEG),
     I("garam-masala", 2.5, INGREDIENT_CAT_CONDIMENT),
     I("coriander", 1, INGREDIENT_CAT_CONDIMENT),
     I("paprika", 2, INGREDIENT_CAT_CONDIMENT),
     I("chilli-powder", 1, INGREDIENT_CAT_CONDIMENT),
     I("brown-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("ginger", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("curry-powder", 1, INGREDIENT_CAT_CONDIMENT),
     I("cinnamon", 0.5, INGREDIENT_CAT_CONDIMENT),
     I("chicken-stock", 0.5, INGREDIENT_CAT_OTHER),
     I("passata", 400, INGREDIENT_CAT_OTHER),
     I("tomato-paste", 2, INGREDIENT_CAT_OTHER),
     I("cardamom-pods", 6, INGREDIENT_CAT_FRUIT_VEG),
     I("double-cream", 175, "diary"),
     I("fresh-coriander", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("white-rice", 500, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("chicken-pie", "chicken", "pastry", 1.5,
    [I("puff-pastry", 2, "frozen"),
     I("chicken-breast", 500, INGREDIENT_CAT_MEAT),
     I("carrot", 3, INGREDIENT_CAT_FRUIT_VEG),
     I("potato", 3, INGREDIENT_CAT_FRUIT_VEG),
     I("fresh-thyme", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("brown-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("plain-flour", 6, INGREDIENT_CAT_OTHER),
     I("milk", 300, INGREDIENT_CAT_DAIRY),
     I("egg", 1, INGREDIENT_CAT_DAIRY),
     I("lemon-juice", 1, INGREDIENT_CAT_OTHER),
     I("brocolli", 1, INGREDIENT_CAT_FRUIT_VEG),
    ],
    ),
  R("beef-stroganoff", "beef", "pasta", 45,
    [I("fillet-steak", 600, INGREDIENT_CAT_MEAT),
     I("brown-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("mushroom", 300, INGREDIENT_CAT_FRUIT_VEG),
     I("plain-flour", 2, INGREDIENT_CAT_OTHER),
     I("beef-stock", 2, INGREDIENT_CAT_OTHER),
     I("dijon-mustard", 1, INGREDIENT_CAT_OTHER),
     I("sour-cream", 150, INGREDIENT_CAT_DAIRY),
     I("penne-pasta", 500, INGREDIENT_CAT_OTHER),
     I("fresh-chives", 1, INGREDIENT_CAT_FRUIT_VEG),
    ],
    ),
  R("kung-pao-chicken", "chicken", "rice", 1,
    [I("rice-wine", 2, INGREDIENT_CAT_OTHER),
     I("white-pepper", 0.25, INGREDIENT_CAT_OTHER),
     I("dark-soy-sauce", 5, INGREDIENT_CAT_OTHER),
     I("hoisin-sauce", 4, INGREDIENT_CAT_OTHER),
     I("sesame-oil", 1, INGREDIENT_CAT_OTHER),
     I("garlic", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("ginger", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("chicken-breast", 500, INGREDIENT_CAT_MEAT),
     I("corn-flour", 1, INGREDIENT_CAT_OTHER),
     I("red-chilli", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("red-capsicum", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("zucchini", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("spring-onion", 12, INGREDIENT_CAT_FRUIT_VEG),
     I("cashew", 1, INGREDIENT_CAT_OTHER),
     I("white-rice", 500, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("cottage-pie", "beef", "potato", 1,
    [I("brown-onion", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("celery", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("carrot", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("green-beans", 200, INGREDIENT_CAT_FRUIT_VEG),
     I("beef-mince", 900, INGREDIENT_CAT_MEAT),
     I("worcestershire-sauce", 2, INGREDIENT_CAT_OTHER),
     I("beef-stock", 2, INGREDIENT_CAT_OTHER),
     I("potato", 1800, INGREDIENT_CAT_FRUIT_VEG),
     I("heavy-cream", 120, INGREDIENT_CAT_DAIRY),
     I("corn-flour", 2, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("chicken-paprikash", "chicken", "pasta", 1,
    [I("brown-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("garlic", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("tin-tomatoes", 400, INGREDIENT_CAT_OTHER),
     I("celery", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("chicken-breast", 500, INGREDIENT_CAT_MEAT),
     I("plain-flour", 2, INGREDIENT_CAT_OTHER),
     I("sweet-paprika", 2, INGREDIENT_CAT_OTHER),
     I("chicken-stock", 2, INGREDIENT_CAT_OTHER),
     I("sour-cream", 225, INGREDIENT_CAT_DAIRY),
     I("fussili-pasta", 500, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("mee-goreng", "chicken", "noodles", 1,
    [I("shallot", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("mushroom", 5, INGREDIENT_CAT_FRUIT_VEG),
     I("garlic", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("white-cabbage", 0.5, INGREDIENT_CAT_FRUIT_VEG),
     I("chicken-breast", 500, INGREDIENT_CAT_MEAT),
     I("thick-egg-noodles", 2, INGREDIENT_CAT_OTHER),
     I("bean-sprouts", 150, INGREDIENT_CAT_FRUIT_VEG),
     I("spring-onion", 6, INGREDIENT_CAT_FRUIT_VEG),
     I("red-chilli", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("sweet-soy-sauce", 4, INGREDIENT_CAT_OTHER),
     I("dark-soy-sauce", 3, INGREDIENT_CAT_OTHER),
     I("oyster-sauce", 2, INGREDIENT_CAT_OTHER),
     I("sweet-chilli-sauce", 2, INGREDIENT_CAT_OTHER),
     I("white-pepper", 0.25, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("black-pepper-beef", "beef", "rice", 1,
    [I("black-peppercorns", 10, INGREDIENT_CAT_OTHER),
     I("sirloin", 450, INGREDIENT_CAT_MEAT),
     I("sesame-oil", 1, INGREDIENT_CAT_OTHER),
     I("brown-onion", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("red-capsicum", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("green-capsicum", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("cornflour", 2, INGREDIENT_CAT_OTHER),
     I("dark-soy-sauce", 2, INGREDIENT_CAT_OTHER),
     I("oyster-sauce", 2, INGREDIENT_CAT_OTHER),
     I("red-chilli", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("chinese-cooking-wine", 1, INGREDIENT_CAT_OTHER),
     I("beef-stock", 0.5, INGREDIENT_CAT_OTHER),
     I("garlic", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("ginger", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("white-rice", 500, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("cajun-chicken-pasta", "chicken", "pasta", 1,
    [I("brown-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("cajun-seasoning", 2, INGREDIENT_CAT_OTHER),
     I("chicken-breast", 600, INGREDIENT_CAT_MEAT),
     I("chorizo", 75, INGREDIENT_CAT_MEAT),
     I("garlic", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("green-capsicum", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("red-capsicum", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("tin-tomatoes", 400, INGREDIENT_CAT_OTHER),
     I("chicken-stock", 1, INGREDIENT_CAT_OTHER),
     I("heavy-cream", 2, INGREDIENT_CAT_DAIRY),
     I("baby-spinach", 120, INGREDIENT_CAT_FRUIT_VEG),
     I("cherry-tomatoes", 10, INGREDIENT_CAT_FRUIT_VEG),
     I("cheddar-cheese", 50, INGREDIENT_CAT_DAIRY),
     I("rigatoni-pasta", 500, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("smoky-meatball-pasta-bake", "beef", "pasta", 1,
    [I("beef-mince", 500, INGREDIENT_CAT_MEAT),
     I("shallot", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("garlic", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("breadcrumbs", 60, INGREDIENT_CAT_OTHER),
     I("egg", 1, INGREDIENT_CAT_DAIRY),
     I("italian-herbs", 1, INGREDIENT_CAT_OTHER),
     I("tin-tomatoes", 400, INGREDIENT_CAT_OTHER),
     I("beef-stock", 1, INGREDIENT_CAT_OTHER),
     I("worcestershire-sauce", 1, INGREDIENT_CAT_OTHER),
     I("smoked-paprika", 1, INGREDIENT_CAT_OTHER),
     I("cheddar-cheese", 40, INGREDIENT_CAT_DAIRY),
     I("mozarella-cheese", 30, INGREDIENT_CAT_DAIRY),
     I("rigatoni-pasta", 500, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("lamb-kofta", "lamb", "flatbread", 1,
    [I("lamb-mince", 500, INGREDIENT_CAT_MEAT),
     I("brown-onion", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("garlic", 3, INGREDIENT_CAT_FRUIT_VEG),
     I("fresh-mint", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("cumin", 3, INGREDIENT_CAT_OTHER),
     I("coriander", 2, INGREDIENT_CAT_OTHER),
     I("chilli-flakes", 1, INGREDIENT_CAT_OTHER),
     I("cinnamon", 1, INGREDIENT_CAT_OTHER),
     I("flatbread", 4, INGREDIENT_CAT_OTHER),
     I("cherry-tomatoes", 10, INGREDIENT_CAT_FRUIT_VEG),
     I("salad-mix", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("white-wine-vinegar", 1, INGREDIENT_CAT_OTHER),
     I("tzatiki", 1, INGREDIENT_CAT_DAIRY),
     I("skewers", 6, INGREDIENT_CAT_OTHER),
    ],
    ),
  R("honey-garlic-chicken", "chicken", "rice", 1,
    [I("chicken-tenderloins", 500, INGREDIENT_CAT_MEAT),
     I("cornflour", 2, INGREDIENT_CAT_OTHER),
     I("garlic", 4, INGREDIENT_CAT_FRUIT_VEG),
     I("honey", 110, INGREDIENT_CAT_OTHER),
     I("chicken-stock", 0.5, INGREDIENT_CAT_OTHER),
     I("rice-vinegar", 1, INGREDIENT_CAT_OTHER),
     I("light-soy-sauce", 1, INGREDIENT_CAT_OTHER),
     I("white-rice", 500, INGREDIENT_CAT_OTHER),
     I("brocolli", 1, INGREDIENT_CAT_FRUIT_VEG),
     I("carrot", 2, INGREDIENT_CAT_FRUIT_VEG),
     I("green-beans", 200, INGREDIENT_CAT_FRUIT_VEG),
    ],
    ),
]

# chilli con-carne, chicken korma
# beef goulash, beef ragu, beef and guiness stew, lasagne, steak pie,  spicy ginger beef stir fry
# chicken parmesan, chicken korma, chicken tikka masala, chicken madras, chicken marsala,  honey lemon
# TODO(Ryan): Add soup, tortillas

def recipes():
  global global_recipes

  names = ""
  ingredients = {}
  # TODO(Ryan): More intelligent recipe culling
  recipes_list = [global_recipes[4], global_recipes[7], global_recipes[8], global_recipes[13]]
  for recipe in recipes_list:
    names += (recipe.name + f"({recipe.duration}-{recipe.grain}), ")
    for ingredient in recipe.ingredients:
      if ingredients.get(ingredient.name, None) is not None:
        ingredients[ingredient.name].amount += ingredient.amount
      else:
        ingredients[ingredient.name] = ingredient

  # TODO(Ryan): Add medicinal and toiletries
  regular_ingredients=[I("BUTTER", 0, INGREDIENT_CAT_DAIRY), 
            I("OLIVE-OIL", 0, INGREDIENT_CAT_OTHER),
            I("SALT", 0, INGREDIENT_CAT_OTHER),
            I("PEPPER", 0, INGREDIENT_CAT_OTHER),
            I("HUMMUS", 0, INGREDIENT_CAT_OTHER),
            I("BABA-GANOUSH", 0, INGREDIENT_CAT_OTHER),
            I("PEANUT-BUTTER", 0, INGREDIENT_CAT_OTHER),
            I("CHEESE-STICKS", 0, INGREDIENT_CAT_DAIRY),
            I("FAVA-BEANS", 0, INGREDIENT_CAT_OTHER),
            I("DATES", 0, INGREDIENT_CAT_FRUIT_VEG),
            I("APPLES", 0, INGREDIENT_CAT_FRUIT_VEG),
            I("BANANAS", 0, INGREDIENT_CAT_FRUIT_VEG),
            I("GRAPES", 0, INGREDIENT_CAT_FRUIT_VEG),
            I("CARROTS", 0, INGREDIENT_CAT_FRUIT_VEG),
            I("DARK-CHOCOLATE", 0, INGREDIENT_CAT_OTHER),
            I("TEA", 0, INGREDIENT_CAT_OTHER),
            I("VITA-WHEATS", 0, INGREDIENT_CAT_OTHER),
            I("CORN-CHIPS", 0, INGREDIENT_CAT_OTHER),
            I("ROLLED-OATS", 0, INGREDIENT_CAT_OTHER),
            I("YOGURT", 0, INGREDIENT_CAT_DAIRY),
            I("FROZEN-BERRIES", 0, "frozen"),
            I("ICE-CREAM", 0, "frozen"),
            I("MIXED-NUTS", 0, INGREDIENT_CAT_OTHER),
            I("CINNAMON", 0, INGREDIENT_CAT_OTHER),
            I("COCONUT-FLAKES", 0, INGREDIENT_CAT_OTHER),
            I("SEEDS", 0, INGREDIENT_CAT_OTHER),
            I("HONEY", 0, INGREDIENT_CAT_OTHER),
            I("JUICE", 0, INGREDIENT_CAT_DAIRY),
            I("KALE", 0, INGREDIENT_CAT_FRUIT_VEG),
            I("MILK", 0, INGREDIENT_CAT_DAIRY),
            I("PAPER TOWELS", 0, "toiletries"),
            I("TISSUES", 0, "toiletries"),
            I("TOILET PAPER", 0, "toiletries"),
            I("DEODERANT", 0, "toiletries"),
            I("TOOTHPASTE", 0, "toiletries"),
            I("DENTAL FLOSS", 0, "toiletries"),
            I("SUNSCREEN", 0, "toiletries"),
            I("PANADOL", 0, "medicinal"),
            I("NUROFEN", 0, "medicinal"),
            I("DEMAZIN", 0, "medicinal"),
            I("SPONGE", 0, INGREDIENT_CAT_OTHER),
            I("BAR-SOAP", 0, "toiletries"),
            I("SOAP", 0, "toiletries"),
            I("STOVE-CLEANER", 0, INGREDIENT_CAT_OTHER),
            I("BIN-BAGS", 0, INGREDIENT_CAT_OTHER),
            I("COMPOST-BAGS", 0, INGREDIENT_CAT_OTHER),
            I("DISHWASHER-TABLETS", 0, INGREDIENT_CAT_OTHER),
            I("DETERGENT", 0, INGREDIENT_CAT_OTHER),
            I("GLEN-20", 0, INGREDIENT_CAT_OTHER),
            I("BETADINE", 0, "medicinal"),
            I("BAND-AIDS", 0, "medicinal"),
            I("COTTON-BALLS", 0, "toiletries"),
            I("SHAMPOO/CONDITIONER", 0, "toiletries"),
            I("CLEANSER", 0, "toiletries"),
            I("SUDAFED", 0, "medicinal"),
            I("STREPSILS", 0, "medicinal"),
            I("EUCALYPTUS", 0, "medicinal"),
            I("PINO-CLEAN", 0, INGREDIENT_CAT_OTHER),
            I("SCOURER", 0, INGREDIENT_CAT_OTHER),
            I("CANNELLINI-BEANS", 2, INGREDIENT_CAT_OTHER),
            I("TIN-TOMATOES", 2, INGREDIENT_CAT_OTHER),
            I("DARK-BROWN-SUGAR", 2, INGREDIENT_CAT_OTHER),
            I("EGGS", 12, INGREDIENT_CAT_DAIRY),
            I("AVOCADO", 2, INGREDIENT_CAT_FRUIT_VEG),
            I("MUSHROOMS", 500, INGREDIENT_CAT_FRUIT_VEG),
            I("RED-WINE-VINEGAR", 100, INGREDIENT_CAT_OTHER),
            I("TOMATO-PASTE", 2, INGREDIENT_CAT_OTHER),
            I("ONIONS", 1, INGREDIENT_CAT_FRUIT_VEG),
            I("THYME/SMOKED-PAPRIKA/CHILLI-FLAKES", 1, INGREDIENT_CAT_CONDIMENT),
            I("BREAD", 1, INGREDIENT_CAT_OTHER),
           ]

  for regular_ingredient in regular_ingredients:
    ingredients[regular_ingredient.name] = regular_ingredient 

  sorted_ingredients = dict(sorted(ingredients.items(), key=lambda i: i[1].category))

  want_to_print = True
  if want_to_print:
    print_output = open("recipes.md", "w")
  else:
    print_output = sys.stdout


  print(f"\n**RECIPES:** {names[:-2]}\n", file=print_output)
  cur_category = ""

  for ingredient_name, ingredient in sorted_ingredients.items():
    category = ingredient.category
    if cur_category != category:
      cur_category = category
      print(f"\n**{cur_category.upper()}**:", file=print_output)
    print(f"{ingredient_name} ({ingredient.amount}), ", file=print_output)


  # NOTE(Ryan): To inform bash script to create pdf and open it
  if want_to_print:
    print("to-print")

if __name__ == "__main__":
  recipes()
